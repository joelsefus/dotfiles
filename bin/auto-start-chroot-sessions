#!/usr/bin/env python
import os, sys
import subprocess


def info_dialog(msg, timeout=1):
    cmd = ['zenity', '--notification', '--text', msg,
           '--timeout', str(timeout)]
    subprocess.call(cmd)
    

def start_session(chroot):
    cmd = ['schroot', '--begin-session', '--session-name=%s' % chroot,
           '-p', '-c', chroot]
    subprocess.check_call(cmd)

def stop_session(chroot):
    cmd = ['schroot', '--end-session', '-c', 'session:%s' % chroot]
    subprocess.check_call(cmd)

def run_session(chroot):
    cmd = ['schroot', '--run-session', '-c', 'session:%s' % chroot]
    subprocess.check_call(cmd)

def list_active_sessions():
    cmd = ['schroot', '--list', '--all-sessions']
    proc = subprocess.Popen(cmd, stdout=subprocess.PIPE)
    proc.wait()
    if proc.returncode:
        raise RuntimeError, "List sessions returned %d" % proc.returncode
    sessions = list()
    prefix = 'session:'
    for line in proc.stdout:
        line = line.strip()
        if line and line.startswith(prefix):
            sessions.append(line.split(prefix)[1])
    return sessions

ACTIONFUN = dict(start=start_session, stop=stop_session,
                 run=run_session)

print 'list_active_sessions', list_active_sessions()

SESSIONS = ['annex', 'webdev']

active_sessions = list_active_sessions()

for s in SESSIONS:
    if s not in active_sessions:
        start_session(s)
        info_dialog('Chroot session %s started' % s)
        
