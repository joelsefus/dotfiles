#!/usr/bin/env python
import os, sys
import subprocess


#from useless.base.path import path
from unipath.path import Path as path
from unipath import FILES, DIRS, LINKS


def mount_filesystem(mountpath):
    cmd = ['mount', mountpath]
    subprocess.check_call(cmd)


def _get_mount_lines(filename):
    columns = ['device', 'directory', 'fs', 'options', 'dump', 'pass']
    lines = [l.strip() for l in file(filename) if l.strip()]
    # strip comments
    lines = [l for l in lines if not l.startswith('#')]
    # make dictionaries
    return [dict(zip(columns, l.split())) for l in lines]
    
    
def get_fstab_lines():
    return _get_mount_lines('/etc/fstab')

def get_proc_mounts_lines():
    return _get_mount_lines('/proc/mounts')

def _parse_mounts_file(filename):
    lines = _get_mount_lines(filename)
    homedir = path(os.path.expanduser('~'))
    home_mounts = list()
    for mount in lines:
        if mount['directory'].startswith(homedir):
            home_mounts.append(mount)
    return home_mounts
    
def parse_fstab():
    return _parse_mounts_file('/etc/fstab')


def parse_proc_mounts():
    return _parse_mounts_file('/proc/mounts')

        
    

        
def main():
    global here, dupes, fdata
    global fstab, pmounts
    here = path.cwd()
    fstab = parse_fstab()
    pmounts = parse_proc_mounts()
    print "WARNING - need to check /proc/mounts"
    for line in fstab:
        mount_filesystem(line['directory'])
        

if __name__ == '__main__':
    main()
    
    
    
    
