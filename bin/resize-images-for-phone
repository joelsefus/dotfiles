#!/usr/bin/env python
import os, sys
import subprocess
import multiprocessing
from multiprocessing.pool import ThreadPool

# resizes all image files in current directory

def resize_image(src, dest, size='1080x1920'):
    print "Resizing", src
    cmd = ['convert', '-resize', size, src, dest]
    subprocess.check_call(cmd)

def resize_image_job(params):
    resize_image(*params)


if __name__ == '__main__':
    do_gifs = True
    parent = os.path.basename(os.getcwd())
    phonedir = '%s-phone' % parent
    if os.path.isdir(phonedir):
        raise RuntimeError, 'phone directory exists'
    os.mkdir(phonedir)
    suffixes = ['jpg', 'png']
    files = os.listdir('.')
    files = (f for f in files if f.split('.')[-1] in suffixes)
    params = ((f, os.path.join(phonedir, f)) for f in files)
    chunksize = 20
    processes = 5
    pool = ThreadPool(processes=processes)
    output = pool.map(resize_image_job, params)
    if do_gifs:
        files = [f for f in os.listdir('.') if f.endswith('.gif')]
        params = ((f, os.path.join(phonedir, f)) for f in files)
        pool = ThreadPool(processes=processes)
        output = pool.map(resize_image_job, params)
        
